CHIP		?= best2300

DEBUG		?= 1

FPGA		?= 0

MBED		?= 1

RTOS		?= 1

LIBC_ROM    ?= 1

WATCHER_DOG ?= 0

DEBUG_PORT	?= 1
# 0: usb
# 1: uart0
# 2: uart1

FLASH_CHIP	?= ALL
# GD25Q80C
# GD25Q32C
#GD25LQ32C
#EN25S80B
# ALL

AUDIO_OUTPUT_MONO ?= 0

AUDIO_OUTPUT_DIFF ?= 0

HW_FIR_EQ_PROCESS ?= 0

SW_IIR_EQ_PROCESS ?= 0

PC_CMD_UART ?= 0

AUDIO_SECTION_ENABLE ?= 0

HW_CODEC_IIR_EQ_PROCESS ?= 1

AUDIO_RESAMPLE ?= 1

TWS_SBC_PATCH_SAMPLES ?= 0

AUDIO_OUTPUT_VOLUME_DEFAULT ?= 17
# range:1~17

AUDIO_INPUT_CAPLESSMODE ?= 0

AUDIO_INPUT_LARGEGAIN ?= 0

#AUDIO_RESAMPLE ?= 0

AUDIO_CODEC_ASYNC_CLOSE ?= 0

AUDIO_SCO_BTPCM_CHANNEL ?= 1

AUDIO_EQ_PROCESS ?= 0

TWS_AF_ADC_I2S_SYNC ?= 0

SPEECH_TX_MIC_FIR_CALIBRATION ?= 0

SPEECH_TX_AEC2FLOAT ?= 1

# if aec2float is enable, please use ns inside aec2float to save mips
SPEECH_TX_NS2FLOAT ?= 0

SPEECH_TX_COMPEXP ?= 0

SPEECH_TX_2MIC_NS2 ?= 0

SPEECH_TX_EQ ?= 1

SPEECH_TX_POST_GAIN ?= 0

SPEECH_RX_PLC ?= 1

SPEECH_RX_NS2FLOAT ?= 0

SPEECH_RX_EQ ?= 1

SPEECH_RX_POST_GAIN ?= 0

HFP_1_6_ENABLE ?= 1

MSBC_PLC_ENABLE ?= 1

MSBC_PLC_ENCODER ?= 1

MSBC_16K_SAMPLE_RATE ?= 1

LBRT ?= 0

ifeq ($(LBRT),1)
export VUSB_ON ?= 1
KBUILD_CPPFLAGS += -D__LBRT_PAIR__
endif

SBC_FUNC_IN_ROM ?= 1

VOICE_PROMPT ?= 1

BISTO ?= 0
BLE ?= 1
BES_OTA_TWS ?= 0

BTADDR_GEN ?= 1

BT_ONE_BRING_TWO ?= 0

TWS_ALL_SIDE_STEREO ?= 0

A2DP_LHDC_ON ?= 0

A2DP_AAC_ON ?= 1

SBC_TRANS_TO_AAC ?= 0

TWS_ROLE_SWITCH ?= 1

FACTORY_MODE ?= 1

ENGINEER_MODE ?= 1

ULTRA_LOW_POWER	?= 1

DAC_CLASSG_ENABLE ?= 1

NO_SLEEP ?= 0

AUTO_TEST ?= 0

CALIB_SLOW_TIMER ?= 1

DEBUG_LOG_ENABLED ?= 0

FLASH_SIZE	?= 0x400000

USER_STATISTIC_DATA_LOG_ENABLED ?= 0

SUPPORT_BATTERY_REPORT ?= 1

SUPPORT_HF_INDICATORS ?= 0

SUPPORT_SIRI ?= 1

export POWER_MODE	?= DIG_DCDC

export BT_RF_PREFER ?= 3M

HALFDUPLEXUART ?= 0

ifeq ($(CURRENT_TEST),1)
export VCODEC_VOLT ?= 1.6V
export VANA_VOLT ?= 1.35V
else
export VANA_VOLT ?= 1.3V
ifeq ($(LBRT),1)
export VCODEC_VOLT ?= 1.8V
else
export VCODEC_VOLT ?= 1.7V
endif
endif

export VCRYSTAL_OFF ?= 1

export TWS   ?= 1

export JTAG_BT ?= 1

OSC_26M_X4_AUD2BB ?= 1

export SW_PLAYBACK_RESAMPLE ?= 0
export RESAMPLE_ANY_SAMPLE_RATE ?= 0

ifneq ($(SW_PLAYBACK_RESAMPLE),1)
export APP_MUSIC_26M ?= 1
endif

export TWS_USE_PLL_SYNC ?= 0
#should open afc at the same time

ifeq ($(TWS_USE_PLL_SYNC),1)
KBUILD_CPPFLAGS += -D__TWS_USE_PLL_SYNC__
KBUILD_CPPFLAGS += -D__TWS_SYNC_WITH_DMA_COUNTER__
else
KBUILD_CPPFLAGS += -D__TWS_RESAMPLE_ADJUST__
endif

export MASTER_FOLLOW_MOBILE ?= 0
ifeq ($(MASTER_FOLLOW_MOBILE),1)
KBUILD_CPPFLAGS += -D__MASTER_FOLLOW_MOBILE__
endif

export BTADDR_FOR_DEBUG ?= 1

ifeq ($(BISTO),1)
VOICE_DATAPATH_ENABLED ?= 1
CRASH_DUMP_SECTION_SIZE ?= 0x1000
export BES_OTA_ENABLED ?= 0
export VOICE_DATAPATH_TYPE ?= gsound
export GFPS_ENABLE ?= 1
ifeq ($(GFPS_ENABLE),1)
BLE_IS_USE_RPA_ENABLED ?= 1
endif
KBUILD_CPPFLAGS += -DFIRMWARE_REV
KBUILD_CFLAGS += -DGSOUND_ENABLED
KBUILD_CPPFLAGS += -DDEBUG_BLE_DATAPATH=0
KBUILD_CPPFLAGS += -DGSOUND_OTA_ENABLED=1

export GSOUND_HOTWORD_ENABLED ?= 0
ifeq ($(GSOUND_HOTWORD_ENABLED), 1)
KBUILD_CFLAGS += -DGSOUND_HOTWORD_ENABLED
endif

#export OPUS_CODEC ?= 1
#ENCODING_ALGORITHM_OPUS                2
#ENCODING_ALGORITHM_SBC                 3
KBUILD_CPPFLAGS += -DVOB_ENCODING_ALGORITHM=3

# As MIX_MIC_DURING_MUSIC uses the isolated audio stream, if define MIX_MIC_DURING_MUSIC, the isolated audio stream
# must be enabled
KBUILD_CPPFLAGS += -DISOLATED_AUDIO_STREAM_ENABLED=1
#KBUILD_CPPFLAGS += -DMIX_MIC_DURING_MUSIC

ASSERT_SHOW_FILE_FUNC ?= 1
#KBUILD_CPPFLAGS += -DSAVING_AUDIO_DATA_TO_SD_ENABLED=1
endif

init-y		:=
core-y		:= platform/ services/ apps/ utils/cqueue/ utils/list/ services/multimedia/ utils/intersyshci/
KBUILD_CPPFLAGS += -Iplatform/cmsis/inc -Iservices/audioflinger -Iplatform/drivers/codec -Iplatform/hal -Iservices/fs/ -Iservices/fs/sd -Iservices/fs/fat  -Iservices/fs/fat/ChaN -Iplatform/drivers/norflash -Iservices/nv_section/log_section

KBUILD_CPPFLAGS += \
    -D_AUTO_SWITCH_POWER_MODE__ \
    -D_BEST1000_QUAL_DCDC_ \
    -D__TWS__  \
    -D__TWS_OUTPUT_CHANNEL_SELECT__  \
    -D__EARPHONE_STAY_BOTH_SCAN__  \
    -D__EARPHONE_STAY_BCR_SLAVE__ \
    -D__TWS_CALL_DUAL_CHANNEL__  \
    -DBT_XTAL_SYNC   \
    -DBT_XTAL_SYNC_NEW_METHOD   \
    -D__ACC_FRAGMENT_COMPATIBLE__ \
    -D__EMSACK__ \
    -D__BT_WARNING_TONE_MERGE_INTO_STREAM_SBC__ \
    -D__LARGE_SYNC_WIN__\
    -DTWS_RING_SYNC \
    -D__NEW_LARGE_SYNC_WIN__  
    
#-D__AVRCP_EVENT_COMMAND_VOLUME_SKIP__
#-D__APP_KEY_FN_STYLE_A__
#-D__NOT_STOP_AUDIO_IN_UNDERFLOW__        
#-D__3RETX_SNIFF__ \
#-D__BT_LL_MONITOR_EN__
#-D_DISABLR_HFP_RECONNECT_WHEN_ROLE_SWITCH_
#	-DAPB_PCM  \
#	-DSW_INSERT_MSBC_TX_OFFSET
#-D__SW_SEQ_FILTER__
#-D_AUTO_SWITCH_POWER_MODE__
#-D_BEST1000_QUAL_DCDC_
#-D__APP_KEY_FN_STYLE_A__
#-D__APP_KEY_FN_STYLE_B__
#-D__BT_ONE_BRING_TWO__
#-D__EARPHONE_STAY_BOTH_SCAN__
#-D__POWERKEY_CTRL_ONOFF_ONLY__

ifeq ($(BES_OTA_TWS),1)
export BES_OTA_BASIC ?= 1
KBUILD_CPPFLAGS += -DFLASH_REGION_BASE=FLASH_BASE+0x20000
KBUILD_CPPFLAGS += -D__APP_IMAGE_FLASH_OFFSET__=0x20000
KBUILD_CPPFLAGS += -DNEW_IMAGE_FLASH_OFFSET=0x200000
KBUILD_CPPFLAGS += -DBES_OTA_TWS
KBUILD_CPPFLAGS += -DFIRMWARE_REV
KBUILD_CPPFLAGS += -D__APP_KEY_FN_STYLE_A__
endif

KBUILD_CPPFLAGS += \
    -D__TWS_PAIR_DIRECTLY__\
    -D__ALLOW_TWS_RECONNECT_WITHOUT_MOBILE_CONNECTED__\
    -D__FORCE_BOX_OPEN_FOR_POWER_ON_RECONNECT__
#	-D__DIFFRENT_BITRATE_FOR_48K_SAMPLE_RATE__
#KBUILD_CPPFLAGS += -DBLE_TWS_USE_BLE_AS_INBOX_COMMUNICATION_PATH=1 \
#				   -D__ENABLE_IN_BOX_STATE_HANDLE__ \
#				   -D__ENABLE_WEAR_STATUS_DETECT__

KBUILD_CPPFLAGS += -D__BLE_TWS_ENABLED__=1
KBUILD_CPPFLAGS += -D__USE_NEW_NV_CONFIG__=0
KBUILD_CPPFLAGS += -D__LEFT_SIDE__
KBUILD_CPPFLAGS += -DWORKAROUND_FOR_KNOWN_ISSUE_ENABLED=1
KBUILD_CPPFLAGS += -DIS_USE_INTERNAL_ACL_DATA_PATH=0
KBUILD_CPPFLAGS += -DCMU_FREQ_52M_IN_ACTIVE_MOODE
KBUILD_CPPFLAGS += -DTRACE_DUMP2FLASH
KBUILD_CPPFLAGS += -DCLOSE_BOX_TO_TRIGGER_ROLE_SWITCH=1
#KBUILD_CPPFLAGS += -DOS_HAS_CPU_STAT=1
#KBUILD_CPPFLAGS += -DBLE_OTA_APP_EN=1

LDS_FILE	:= best1000.lds

KBUILD_CPPFLAGS +=

KBUILD_CFLAGS +=

LIB_LDFLAGS += -lstdc++ -lsupc++

#CFLAGS_IMAGE += -u _printf_float -u _scanf_float

#LDFLAGS_IMAGE += --wrap main

